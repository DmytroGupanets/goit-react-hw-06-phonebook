{"version":3,"sources":["components/filter/Filter.module.css","components/contactsList/ContactsList.module.css","redux/contacts/contactsActions.js","components/contactForm/ContactForm.js","components/contactsList/contactsListItem/ContactsListItem.js","components/contactsList/ContactsList.js","redux/filter/filterActions.js","components/filter/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/filter/filterReducer.js","redux/rootReducer.js","redux/store.js","index.js","components/contactForm/ContactForm.module.css","components/contactsList/contactsListItem/ContactsListItem.module.css"],"names":["module","exports","addContact","createAction","removeContactById","ContactForm","state","name","number","onHandleChange","e","target","value","setState","onFormSubmit","preventDefault","contact","id","uuidv4","isSameContactName","props","contacts","findIndex","isSameContactPhone","alert","className","styles","form","onSubmit","this","label","type","pattern","title","required","onChange","addContactBtn","Component","connect","items","contactsItem","contactName","contactsNumber","contactsButton","onClick","filterValue","filter","contactsList","toLowerCase","includes","map","updateFilterValue","filterContiner","App","ContactsList","contactsItemReducer","createReducer","payload","el","contactsFilterReducer","_","rootReducer","combineReducers","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","reduxStore","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.56b967d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContiner\":\"Filter_filterContiner__3d0ot\",\"label\":\"Filter_label__1xhnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"ContactsList_contactsList__3-rHF\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContact = createAction(\"addContact\");\r\nexport const removeContactById = createAction(\"removeContactById\");\r\n\r\n// ================================== Redux =================================\r\n// import { ADD_CONTACT, REMOVE_CONTACT_BY_ID } from \"../constants/constants\";\r\n\r\n// export const addContact = (contact) => ({\r\n//   type: ADD_CONTACT,\r\n//   payload: contact,\r\n// });\r\n\r\n// export const removeContactById = (id) => ({\r\n//   type: REMOVE_CONTACT_BY_ID,\r\n//   payload: id,\r\n// });\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contactsActions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = { name: \"\", number: \"\" };\r\n\r\n  onHandleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  onFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const contact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    const isSameContactName = this.props.contacts.findIndex(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const isSameContactPhone = this.props.contacts.findIndex(\r\n      (contact) => contact.number === this.state.number\r\n    );\r\n\r\n    if (isSameContactName !== -1) {\r\n      return alert(`${this.state.name} is already in contacts`);\r\n    } else if (isSameContactPhone !== -1) {\r\n      return alert(`Phone number ${this.state.number} is already in contacts`);\r\n    }\r\n\r\n    this.props.addContact(contact);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.onFormSubmit}>\r\n        <label className={styles.label}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          Phone number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.onHandleChange}\r\n          />\r\n        </label>\r\n        <button className={styles.addContactBtn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts.items,\r\n});\r\n\r\nexport default connect(mapStateToProps, { addContact })(ContactForm);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeContactById } from \"../../../redux/contacts/contactsActions\";\r\nimport styles from \"./ContactsListItem.module.css\";\r\n\r\nconst ContactsListItem = ({ name, number, id, removeContactById }) => {\r\n  const removeItem = () => {\r\n    removeContactById(id);\r\n  };\r\n  return (\r\n    <li className={styles.contactsItem}>\r\n      <p className={styles.contactName}>\r\n        {name}:<span className={styles.contactsNumber}>{number}</span>\r\n      </p>\r\n      <button\r\n        className={styles.contactsButton}\r\n        type=\"button\"\r\n        onClick={removeItem}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(null, { removeContactById })(ContactsListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContactsListItem from \"./contactsListItem/ContactsListItem\";\r\nimport styles from \"./ContactsList.module.css\";\r\n\r\nconst ContactList = ({ contacts, filterValue }) => {\r\n  return (\r\n    <ul className={styles.contactsList}>\r\n      {contacts\r\n        .filter((contact) =>\r\n          contact.name.toLowerCase().includes(filterValue.toLowerCase())\r\n        )\r\n        .map((contact) => (\r\n          <ContactsListItem key={contact.id} {...contact} id={contact.id} />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  contacts: state.contacts.items,\r\n  filterValue: state.contacts.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const updateFilterValue = createAction(\"updateFilterValue\");\r\n\r\n// =========================== Redux =====================\r\n// export const updateFilterValue = (value = \"\") => ({\r\n//   type: UPDATE_FILTER_VALUE,\r\n//   payload: value,\r\n// });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateFilterValue } from \"../../redux/filter/filterActions\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ updateFilterValue, filterValue }) => {\r\n  const onHandleChange = (e) => {\r\n    updateFilterValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.filterContiner}>\r\n      <label className={styles.label}>\r\n        Find contacts by name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          onChange={onHandleChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  filterValue: state.contacts.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updateFilterValue })(Filter);\r\n","import ContactForm from \"./contactForm/ContactForm\";\nimport ContactsList from \"./contactsList/ContactsList\";\nimport Filter from \"./filter/Filter\";\n\nconst App = () => {\n  return (\n    <>\n      <ContactForm />\n      <Filter />\n      <ContactsList />\n    </>\n  );\n};\n\nexport default App;\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, removeContactById } from \"./contactsActions\";\r\n\r\nconst contactsItemReducer = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [removeContactById]: (state, { payload }) =>\r\n    state.filter((el) => el.id !== payload),\r\n});\r\n\r\nexport default contactsItemReducer;\r\n\r\n// ============================== Redux =====================================\r\n// import { ADD_CONTACT, REMOVE_CONTACT_BY_ID } from \"../constants/constants\";\r\n\r\n// const contactsItemReducer = (state = [], { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD_CONTACT:\r\n//       return [...state, payload];\r\n\r\n//     case REMOVE_CONTACT_BY_ID:\r\n//       return state.filter((el) => el.id !== payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default contactsItemReducer;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { updateFilterValue } from \"./filterActions\";\r\n\r\nconst contactsFilterReducer = createReducer(\"\", {\r\n  [updateFilterValue]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default contactsFilterReducer;\r\n\r\n// ========================== Redux ============================\r\n// import { UPDATE_FILTER_VALUE } from \"../constants/constants\";\r\n\r\n// export const contactsFilterReducer = (state = \"\", { type, payload }) => {\r\n//   switch (type) {\r\n//     case UPDATE_FILTER_VALUE:\r\n//       return payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default contactsFilterReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport contactsItemReducer from \"./contacts/contactsReducer\";\r\nimport contactsFilterReducer from \"./filter/filterReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  items: contactsItemReducer,\r\n  filter: contactsFilterReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"contactsInfo\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: persistReducer(persistConfig, rootReducer) },\r\n\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst reduxStore = { store, persistor };\r\n\r\nexport default reduxStore;\r\n\r\n// =============================== Redux ====================================\r\n// import { createStore } from \"redux\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import rootReducer from \"./rootReducer\";\r\n\r\n// const store = createStore(rootReducer, composeWithDevTools());\r\n\r\n// export default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport reduxStore from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={reduxStore.store}>\n      <PersistGate loading={null} persistor={reduxStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1-Bir\",\"label\":\"ContactForm_label__3rlYb\",\"addContactBtn\":\"ContactForm_addContactBtn__1Qofm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactsListItem_contactsItem__1Fkwz\",\"contactName\":\"ContactsListItem_contactName__20MQV\",\"contactsNumber\":\"ContactsListItem_contactsNumber__21ft1\",\"contactsButton\":\"ContactsListItem_contactsButton__3IW2t\"};"],"sourceRoot":""}